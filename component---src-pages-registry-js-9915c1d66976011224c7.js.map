{"version":3,"sources":["webpack:///./src/components/comingSoon.js","webpack:///./src/pages/registry.js","webpack:///./src/components/getUpdatesSection.js"],"names":["ComingSoon","className","withPrivateRoute","content","title","SuccessMessage","onEnterMore","style","fontSize","href","onClick","e","preventDefault","EmailForm","onComplete","useState","isSubmitting","setIsSubmitting","submitOrSpinner","Spinner","type","styles","submit","onSubmit","setTimeout","emailInput","placeholder","key","addEndListener","node","done","addEventListener","classNames","width","height","viewBox","xmlns","stroke","fill","fillRule","transform","strokeWidth","strokeOpacity","cx","cy","r","d","attributeName","from","to","dur","repeatCount","padding","marginBottom","fontFamily","backgroundColor","color","GetUpdatesSection","success","setSuccess","maxWidth","margin"],"mappings":"6FAAA,mCAYeA,IATf,WACE,OACE,oCACE,yBAAKC,UAAU,8BAAf,eACA,mE,kCCPN,gFA2BeC,uBAjBM,WACnB,IAAMC,EAAmD,kBAAC,IAAD,MAEzD,OACE,oCACE,kBAAC,IAAD,CAAKC,MAAM,aACX,yBAAKH,UAAU,WACb,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,WAAd,YACCE,IAGL,kBAAC,IAAD,W,kCCtBN,2DAoDA,SAASE,EAAT,GAA0C,IAAhBC,EAAe,EAAfA,YACxB,OACE,oCACE,uBACEC,MAAO,CACLC,SAAU,6CAFd,uBAOA,uBACEC,KAAK,IACLR,UAAU,sBACVS,QAAS,SAAAC,GACPA,EAAEC,iBACFN,MALJ,kEAcN,SAASO,EAAT,GAAoC,IAAfC,EAAc,EAAdA,WAAc,EACOC,oBAAS,GAA1CC,EAD0B,KACZC,EADY,KAG3BC,EAAkBF,EACtB,kBAACG,EAAD,MAEA,4BAAQC,KAAK,SAASb,MAAOc,EAAOC,QAApC,UAKF,OACE,0BACEC,SAAU,SAAAZ,GACRA,EAAEC,iBACFK,GAAgB,GAChBO,YAAW,WACTV,MACC,OAGL,2BACEM,KAAK,OACLb,MAAOc,EAAOI,WACdC,YAAY,mBAEd,uBACEnB,MAAO,CACLC,SAAU,SAFd,+EASA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEmB,IAAKX,EAAe,aAAe,iBACnCY,eAAgB,SAACC,EAAMC,GAAP,OACdD,EAAKE,iBAAiB,gBAAiBD,GAAM,IAE/CE,WAAW,aAEVd,KAOX,SAASC,IACP,OACE,yBACEc,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,MAAM,6BACNC,OAAO,uBAEP,uBAAGC,KAAK,OAAOC,SAAS,WACtB,uBAAGC,UAAU,iBAAiBC,YAAY,KACxC,4BAAQC,cAAc,KAAKC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC7C,0BAAMC,EAAE,+BACN,sCACEC,cAAc,YACd3B,KAAK,SACL4B,KAAK,UACLC,GAAG,YACHC,IAAI,KACJC,YAAY,mBAS1B,IAAM9B,EAAS,CACbI,WAAY,CACVQ,MAAO,QACPmB,QAAS,gBACTC,aAAc,4CAEhB/B,OAAQ,CACNgC,WAAY,wBACZC,gBAAiB,sBACjBC,MAAO,QACPJ,QAAS,gBACT5C,SAAU,SAICiD,IArKf,WAA8B,IAAD,EACG1C,oBAAS,GAAhC2C,EADoB,KACXC,EADW,KAGrBxD,EAAUuD,EACd,kBAACrD,EAAD,CACEC,YAAa,WACXqD,GAAW,MAIf,kBAAC9C,EAAD,CACEC,WAAY,WACV6C,GAAW,MAKjB,OACE,yBAAK1D,UAAU,WACb,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,WAAd,eACA,uBACEM,MAAO,CAELqD,SAAU,QACVC,OAAQ,OACRR,aAAc,6CALlB,6FAWA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE1B,IAAK+B,EAAU,UAAY,cAC3B9B,eAAgB,SAACC,EAAMC,GAAP,OACdD,EAAKE,iBAAiB,gBAAiBD,GAAM,IAE/CE,WAAW,QAEV7B","file":"component---src-pages-registry-js-9915c1d66976011224c7.js","sourcesContent":["import React, { useState } from 'react';\nimport './comingSoon.css';\n\nfunction ComingSoon() {\n  return (\n    <>\n      <div className=\"caps-subheader coming-soon\">Coming Soon</div>\n      <p>Check back or sign up for updates</p>\n    </>\n  );\n}\n\nexport default ComingSoon;\n","import React, { useState } from 'react';\n\nimport SEO from '../components/seo';\nimport GetUpdatesSection from '../components/getUpdatesSection';\nimport ComingSoon from '../components/comingSoon';\n\nimport { withPrivateRoute } from '../components/privateRoute';\n\nconst SHOW_REGISTRY = false;\n\nconst RegistryPage = () => {\n  const content = SHOW_REGISTRY ? <span>Registry!</span> : <ComingSoon />;\n\n  return (\n    <>\n      <SEO title=\"Registry\" />\n      <div className=\"section\">\n        <div className=\"section-container\">\n          <h3 className=\"cursive\">Registry</h3>\n          {content}\n        </div>\n      </div>\n      <GetUpdatesSection />\n    </>\n  );\n};\n\nexport default withPrivateRoute(RegistryPage);\n","import React, { useState, useEffect } from 'react';\nimport { SwitchTransition, CSSTransition } from 'react-transition-group';\nimport './getUpdatesSection.css';\n\nfunction GetUpdatesSection() {\n  const [success, setSuccess] = useState(false);\n\n  const content = success ? (\n    <SuccessMessage\n      onEnterMore={() => {\n        setSuccess(false);\n      }}\n    />\n  ) : (\n    <EmailForm\n      onComplete={() => {\n        setSuccess(true);\n      }}\n    />\n  );\n\n  return (\n    <div className=\"section\">\n      <div className=\"section-container\">\n        <h3 className=\"cursive\">Get Updates</h3>\n        <p\n          style={{\n            // Force the text to wrap the and to the next line\n            maxWidth: '430px',\n            margin: 'auto',\n            marginBottom: 'calc(24px * var(--font-size-multiplier))',\n          }}\n        >\n          Get email updates for important wedding announcements and when new\n          information is posted.\n        </p>\n        <SwitchTransition>\n          <CSSTransition\n            key={success ? 'success' : 'not success'}\n            addEndListener={(node, done) =>\n              node.addEventListener('transitionend', done, false)\n            }\n            classNames=\"fade\"\n          >\n            {content}\n          </CSSTransition>\n        </SwitchTransition>\n      </div>\n    </div>\n  );\n}\n\nfunction SuccessMessage({ onEnterMore }) {\n  return (\n    <>\n      <p\n        style={{\n          fontSize: 'calc(28px * var(--font-size-multiplier))',\n        }}\n      >\n        You're on our list.\n      </p>\n      <a\n        href=\"#\"\n        className=\"enter-another-email\"\n        onClick={e => {\n          e.preventDefault();\n          onEnterMore();\n        }}\n      >\n        want updates sent to an additional email address? click here.\n      </a>\n    </>\n  );\n}\n\nfunction EmailForm({ onComplete }) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const submitOrSpinner = isSubmitting ? (\n    <Spinner />\n  ) : (\n    <button type=\"submit\" style={styles.submit}>\n      Submit\n    </button>\n  );\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        setIsSubmitting(true);\n        setTimeout(() => {\n          onComplete();\n        }, 1000);\n      }}\n    >\n      <input\n        type=\"text\"\n        style={styles.emailInput}\n        placeholder=\"email address*\"\n      />\n      <p\n        style={{\n          fontSize: '16px',\n        }}\n      >\n        * we made this website, so we won't sell or share your personal\n        information\n      </p>\n\n      <SwitchTransition>\n        <CSSTransition\n          key={isSubmitting ? 'submitting' : 'not submitting'}\n          addEndListener={(node, done) =>\n            node.addEventListener('transitionend', done, false)\n          }\n          classNames=\"fade-fast\"\n        >\n          {submitOrSpinner}\n        </CSSTransition>\n      </SwitchTransition>\n    </form>\n  );\n}\n\nfunction Spinner() {\n  return (\n    <svg\n      width=\"38\"\n      height=\"38\"\n      viewBox=\"0 0 38 38\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      stroke=\"var(--accent-color)\"\n    >\n      <g fill=\"none\" fillRule=\"evenodd\">\n        <g transform=\"translate(1 1)\" strokeWidth=\"2\">\n          <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\n          <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"rotate\"\n              from=\"0 18 18\"\n              to=\"360 18 18\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n            />\n          </path>\n        </g>\n      </g>\n    </svg>\n  );\n}\n\nconst styles = {\n  emailInput: {\n    width: '350px',\n    padding: '10px 20px 5px',\n    marginBottom: 'calc(10px * var(--font-size-multiplier))',\n  },\n  submit: {\n    fontFamily: 'MrsEavesAllPetiteCaps',\n    backgroundColor: 'var(--accent-color)',\n    color: 'white',\n    padding: '10px 55px 5px',\n    fontSize: '28px',\n  },\n};\n\nexport default GetUpdatesSection;\n"],"sourceRoot":""}